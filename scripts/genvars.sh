#! /usr/bin/env sh
#
#
# Copyright (c) 2015, Jean Guyomarc'h <jean.guyomarch@gmail.com>
#
# This file is part of SBXG
#
# SBXG is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SBXG is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SBXG.  If not, see <http://www.gnu.org/licenses/>.


set -e

CONFIG_MAKEFILE=./makefile.vars
CONFIG_USER=./config.user
CONFIG_TEMPLATE=./config.template
BOARD_NAME=
CONFIG_BOARD=


# If config.user is not created, create one from the template
if [ ! -f "$CONFIG_USER" ]; then
   # No template file available: something very wrong occured
   if [ ! -f "$CONFIG_TEMPLATE" ]; then
      echo "*** \"$CONFIG_TEMPLATE\" does not exist. Unable to generate \"$CONFIG_USER\"" 1>&2
      exit 1
   fi
   cp "$CONFIG_TEMPLATE" "$CONFIG_USER"
fi

# Get the board name if the file which contains it exists
# Also set the config board file by using the board name
if [ -f .board ]; then
   BOARD_NAME="$(head -n 1 .board)"
   CONFIG_BOARD="./boards/${BOARD_NAME}.conf"
else
   touch .board
fi


# If no config board exist, set it to an empty file
# to avoid errors with sed (while determining the variable list)
if [ ! -f "$CONFIG_BOARD" ]; then
   CONFIG_BOARD=".board"
fi

# Source the user config
. "$CONFIG_USER"

# Get the *names *of all the variables in the config
# From config.user:
#  - remove all comments
#  - keep only variables
#  - format them nicely (no duplicates, no empty lines)
LIST="$(sed -e 's/\#.*$//g' "$CONFIG_USER" "$CONFIG_BOARD" \
   | grep -o  "[a-zA-Z0-9_]*=" | cut -d '=' -f 1 | sort | uniq | tr  "\n" " ")"


# Create an empty file
cat > "$CONFIG_MAKEFILE" << EOF
# $CONFIG_MAKEFILE
# File auto-generated by $0.
# ==== DO NOT EDIT BY HAND =====

EOF

# Write in the makefile.vars the variables in Make's syntax
for l in $LIST; do
   exp="$(eval echo \$$l)"
   echo "$l := $(eval echo -n $exp)" >> "$CONFIG_MAKEFILE"
done

